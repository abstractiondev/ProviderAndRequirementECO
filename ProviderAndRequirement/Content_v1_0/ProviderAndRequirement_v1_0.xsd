<?xml version="1.0" encoding="utf-8"?>
<!-- edited with XMLSpy v2011 rel. 2 sp1 (http://www.altova.com) by Kalle Launiala (Citrus Solutions Oy) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" id="ProviderAndRequirement">
	<xs:element name="ProviderAndRequirementECO" type="ProviderAndRequirementECOType"/>
	<xs:complexType name="LogicalInformationType">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="logicalNamespace" type="xs:string" use="required"/>
		<xs:attribute name="logicalDatatype" type="xs:string" use="required"/>
		<xs:attribute name="sha1Hash" use="required">
			<xs:annotation>
				<xs:documentation>Sha1 hash over the signature as following formula with ASCII encoded byte array (zero-bytes added after encoding):

logicalDataType\0logicalNamespace\0name</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:hexBinary">
					<xs:length value="20"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="LogicalOperationSignatureType">
		<xs:sequence>
			<xs:element name="Parameter" type="LogicalInformationType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ReturnValue" type="LogicalInformationType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="logicalNamespace" type="xs:string" use="required"/>
		<xs:attribute name="sha1Hash" use="required">
			<xs:annotation>
				<xs:documentation>Sha1 hash over the signature as following formula with ASCII encoded byte array (zero-bytes added after encoding):

logicalNamespace\0name\0

(then for each parameter )

logicalDataType\0logicalNamespace\0name\0

(then for return value)

logicalDataType\0logicalNamespace\0name\0</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:hexBinary">
					<xs:length value="20"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ValidationOperationSignatureType">
		<xs:sequence>
			<xs:element name="Parameter" type="LogicalInformationType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="logicalNamespace" type="xs:string" use="required"/>
		<xs:attribute name="sha1Hash" use="required">
			<xs:annotation>
				<xs:documentation>Sha1 hash over the signature as following formula with ASCII encoded byte array (zero-bytes added after encoding):

logicalNamespace\0name\0

(then for each parameter )

logicalDataType\0logicalNamespace\0name\0</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:hexBinary">
					<xs:length value="20"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="BehaviorsType">
		<xs:sequence>
			<xs:element name="OperationSignature" type="LogicalOperationSignatureType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DomainModelType">
		<xs:sequence>
			<xs:element name="Classes" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ClassModel" type="ClassModelType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Validations" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ValidationOperationSignature" type="ValidationOperationSignatureType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ClassModelType">
		<xs:sequence>
			<xs:element name="Property" type="LogicalInformationType" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="logicalNamespace" type="xs:string" use="required"/>
		<xs:attribute name="sha1Hash" use="required">
			<xs:annotation>
				<xs:documentation>Sha1 hash over the signature as following formula with ASCII encoded byte array (zero-bytes added after encoding):

logicalNamespace\0name\0

(then for each property)

logicalDataType\0logicalNamespace\0name\0</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:hexBinary">
					<xs:length value="20"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ContractType">
		<xs:sequence>
			<xs:element name="Behaviors" type="BehaviorsType" minOccurs="0"/>
			<xs:element name="DomainModel" type="DomainModelType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProviderAndRequirementECOType">
		<xs:sequence>
			<xs:element name="Provides" type="ContractType"/>
			<xs:element name="Requires" type="ContractType"/>
		</xs:sequence>
		<xs:attribute name="gitId" use="required">
			<xs:annotation>
				<xs:documentation>Git sha1 id for repository level commit that is unique and secure constraint for the module contents.

Git id is used in ADM-ecosystem to uniquely identify and refer to the the modules. 

Distribution catalogue enlists the contents by git id and provider. 

Certification and validation is also bound on git id.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:hexBinary">
					<xs:length value="20"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
</xs:schema>
